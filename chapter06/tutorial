Объект класса HttpSession сохраняет диалоговое состояние на протяжении множественных запросов.
Другими словами для всей сессии для клиента.

Когда контейнер посылает запрос на сервлет, этот сервлет стартует новый поток. Далее поток сервлета
находит сессию ассоциированную с клиентом, и сохраняет выбор клиента в аттрибуте сессии.
Т.е. все выборы значений клиента сохраняются как аттрибуты сессии.

Каким же образом контейнер индентифицирует клиента?
При первом запросе клиента, контейнер генерирует уникальный ID сессии и отправляет его клиенту вместе с ответом(response).
Далее, клиент отправляет обратно уникальный ID сессии с каждым последующим запросом.
Контейнер видит ID, и сопоставляет сессию с запросом. ID становится частью запросов и ответов
между сервером и клиентом. Передача ID происходит через Cookies.

Необходимо указать контейнеру создать или использовать сессию, а контейнер позаботится обо всем остальном
(генерирование ID, создание Cookie и т.д.)
Пример отправки куки клиенту с ответом:
HttpSession session = request.getSession();   больше от нас НИЧЕГО не требуется

По умолчанию, куки включены во всех браузерах, но до конца мы не можем быть в этом уверены.
Если куки выключены это означает, что клиент никогда не может присоединиться к сессии, т.е.
при каждом запросе у клиента будет создаваться новая сессия.

URL rewriting - другой способ передать ID сессии клиенту. При таком способе значение ID
будет добавляться к строке запроса URL.
URL rewriting будет использоваться только если куки отключены. По умолчанию контейнер всегда
пытается использовать куки.

HTTP протокол не имеет никакого механизма, чтобы узнать, что клиент "ушел".


МЕТОДЫ объекта сессии:
 - getCreationTime() - возвращает время создания сессии (Можно узнать как долго существует сессия)
 - getLastAccessedTime() - возвращает время последнего запроса с этого ID (Можно узнать, когда
 клиент был активен последний раз, т.е. когда клиент последний раз обращался к сессии) милисекунды
 - setMaxInactiveInterval() - максимальное время ожидания между запросами клиента, если интервал
 ожидания превышен, то сессия рвется
 - getMaxInactiveInterval() - возвращает максимальный интервал ожидания между запросами клиента (можно
 узнать, как долго сессия уже неактивна)
 - invalidate() - прекращает сессию, при этом освобождая все аттрибуты сессии.

 Установить интервал таймаута сессии можно в дескрипторе развертывания контейнера (DD)

 Только объекты HttpSession (и их аттрибуты) можно передавать между разными виртуальными машинами.